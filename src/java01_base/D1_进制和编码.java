package java01_base;
/*

	二进制：		计算机用电信号表示信息，闭合0，开启1；
				最初老外为识别字符，用1和0的排列组合的二进制表示字符等，这些组合形成ASCII码表；
				中国也学习，中文的二进制表用gb2312，但gb2312里只有几千字，中国字多，so升级另一个叫GBK，还在升级中；
				国际标准化组织就用Unicode来组织所有国家的语言；
				
	编码：		ASCII		       美国标准
				gb2312 < GBK	中国标准
				Unicode      	Java中使用的编码是Unicode（不选择任何特定的编码，直接使用字符在字符集中的编号，这是统一的唯一方法）
	
	单位：
			位：		"位(bit)"是电子计算机中最小的数据单位。每一位的状态只能是0或1。
			字节：	存储空间的基本计量单位。8个二进制位构成1个"字节(Byte)"，1个字节可以储存1个英文字母或者半个汉字，换句话说，1个汉字占据2个字节的存储空间。
			KB：		1KB表示1K个Byte，也就是1024个字节。
			字：		计算机进行数据处理和运算的单位。"字"由若干个字节构成，字的位数叫做字长，不同档次的机器有不同的字长。
					例如一台8位机，它的1个字就等于1个字节，字长为8位。如果是一台16位机，那么，它的1个字就由2个字节构成，字长为16位。
	
	进制转换：
			为了简化二进制阅读(都是0101的麻烦)，产生八进制，十六进制；
			三个二进制位表示一个八进制数；四个二进制位表示一个十六进制数；
	
			十进制转二进制：	十进制除以2除以2除以2……	每次除以2的时候如果能整除则是0，不能则是1，从右到左按顺序排好得到二进制数；
								例如6除2可以整除(0)，得到3，再除以2不能整除(1)，得到1，不能除了(1)，所以二进制为110
			二进制转十进制：	举例说明，110 ---	1*2的2次方 + 1*2的1次方 + 0*2的0次方 = 6

 			整型的6的二进制是110，占了4个字节(4个八位)(00000000 00000000 00000000 00000110)	
 			二进制的运算：
 				-6是取反加1(11111111 11111111 11111111 11111001 + 00000000 00000000 00000000 00000001 = 11111111 11111111 11111111 11111010)
 */
